<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
<!--Spring的配置文件，主要是配置和业务逻辑-->

    <!-- 连接池 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="2"/>

    </bean>

    <!-- Spring 整合 Mybatis -->
    <!--1. SqlSession  -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定数据源 -->
        <property name="dataSource" ref="pooledDataSource"></property>
        <!-- MyBatis的配置文件 -->
        <!--<property name="configLocation" value="classpath:mybatis.xml"></property>-->

        <!--=================去除mybatis配置文件的方式============-->
        <!--配置别名-->
        <property name="typeAliasesPackage" value="cn.gzu.edu.model"></property>
        <!-- MyBatis的SQL映射文件 -->
        <property name="mapperLocations" value="classpath:cn/gzu/edu/mapper/*Mapper.xml"></property>
    </bean>
    <!-- Mapper接口
        MapperScannerConfigurer 为指定包下的Mapper接口批量生成代理实现类.bean的默认id是接口名首字母小写.
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.gzu.edu.mapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>
    </bean>

    <!-- 组件扫描 -->
    <context:component-scan base-package="cn.gzu.edu"></context:component-scan>


    <!-- 配置一个可以执行批量的sqlSession -->
    <!--<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>-->

    <!--=============================================  -->

    <!-- ===============事务控制的配置 ================-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--控制住数据源  -->
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>
    <!--开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式）  -->
    <!--<aop:config>
        &lt;!&ndash; 切入点表达式 &ndash;&gt;
        <aop:pointcut expression="execution(* cn.gzu.edu.service..*(..))" id="txPoint"/>
        &lt;!&ndash; 配置事务增强 &ndash;&gt;
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>-->

    <!--配置事务增强，事务如何切入  -->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            &lt;!&ndash; 所有方法都是事务方法 &ndash;&gt;
            <tx:method name="*"/>
            &lt;!&ndash;以get开始的所有方法  &ndash;&gt;
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>-->

    <!--开启事物注解-->
    <tx:annotation-driven></tx:annotation-driven>



    <!-- Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） -->
</beans>